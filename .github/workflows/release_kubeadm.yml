name: CI

on:
  push:
    tags:
      - "v*"

jobs:
  clone-project:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: clone project
        run: |
          git clone https://github.com/kubernetes/kubernetes.git
          cd kubernetes
          git checkout release-1.23
          echo "kubernetes version: ${{ github.workspace }}"

      - name: replace certificate years.
        working-directory: ${{github.workspace}}/kubernetes/
        run: |
          sed -i 's#time.Hour \* 24 \* 365#time.Hour * 24 * 365 * 100#g'  ./cmd/kubeadm/app/constants/constants.go
          grep -n -R CertificateValidity ./*
          grep -n -R duration365d ./*

      - name: build kubeadm
        working-directory: ${{github.workspace}}/kubernetes/
        run: |
          ./build/run.sh make kubeadm KUBE_BUILD_PLATFORMS=linux/amd64
          ls -l _output/dockerized/bin/linux/amd64/    

      - name: copy kubeadm
        run: |
          mkdir output
          cp ${{ github.workspace }}/kubernetes/_output/dockerized/bin/linux/amd64/kubeadm output/kubeadm-amd64

      - name: publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: kubeadm-amd64
          path: ${{ github.workspace }}/output/kubeadm-amd64
 
  release:
    needs: clone-project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: create folder
        run: |
          mkdir release

      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: kubeadm-amd64
          path: ${{ github.workspace }}/release/

      - name: Upload assets
        uses: Hs1r1us/Release-AIO@v1.0
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          asset_files: './release/'     

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.REPO_TOKEN }}"
          prerelease: false
          automatic_release_tag: "latest"